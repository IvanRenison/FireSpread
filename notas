Rscript -e "Rcpp::compileAttributes()"
R CMD build .

R CMD INSTALL FireSpread_1.1.tar.gz



// funcion que quit√© de similarity_functions.cpp

// Emulate likelihood function --------------------------------------------
// trying many discrepancy functions

//' @title emulate_loglik_try
//' @description Function to emulate the spread model's likelihood, approximated
//'   by many similarity indexes between the observed and
//'   simulated fires. It's a wrapper around simulate_fire_compare, which returns
//'   the simulated fire with data useful for comparison. In addition, it takes
//'   as arguments data from the observed fire to be compared.
//'   "_try" because it computes many similarity indexes; after selecting one
//'   we will have a function to consider only the best one.
//' @return NumericMatrix(n_replicates, n_metrics): Matrix with each comparison
//'   metric (columns) by simulated fire (rows)

//' @param IntegerMatrix vegetation: integer matrix representing the vegetation
//'   type. 99 is non-burnable, and valid values are {0, ..., n_veg_types - 1}.
//' @param arma::fcube terrain: terrain data, where each matrix slice is a
//'   predictor: {northing, elevation, wind direction}. Slope is absent
//'   because it's directional, so it's computed during the simulation.
//' @param int n_veg_types: integer indicating the number of vegetation types
//'   considered by the model (not just those present in the focal landscape).
//'   used to read properly the vegetation- and non-vegetation parameters in
//'   coef.
//'
//' @param IntegerMatrix ignition_cells(2, burning_cells): row and column id for
//'   the cell(s) where the fire begun. First row has the row_id, second row has
//'   the col_id.
//' @param arma::frowvec coef: parameters in logistic regression to compute the
//'   spread probability as a function of covariates.
//' @param float upper_limit: upper limit for spread probability (setting to
//'   1 makes absurdly large fires).
//'
//' @param List fire_obs: Data of the observed (reference) fire. This has the
//'   same elements as the result from simulate_fire_compare:
//'     IntegerMatrix burned_layer: binary matrix storing (1) in burned pixels;
//'     IntegerMatrix burned_ids: id in [row, col] of the burned cells. First
//'       row hols the rows, second row holds the columns, and each column is
//'       a pixel;
//'     NumericVector counts_veg: count of burned pixels by vegetation type.
//'   The burned_layer is used to compute the spatial overlap index; the
//'   burned_ids is used to evaluate the common burned pixels only in the smallest
//'   of the fires, evaluating only those burned_ids; counts_veg is used to
//'   compute the difference in number of pixels burned by vegetation type.
//' @param int n_replicates: number of fires to simulate, defaults to 10.

// [[Rcpp::export]]
NumericMatrix emulate_loglik_try(
    const arma::fcube& landscape,
    const IntegerMatrix& burnable,
    const IntegerMatrix& vegetation,
    const IntegerMatrix& ignition_cells,
    arma::frowvec coef,
    List fire_ref,
    int n_veg_types = 6,
    float upper_limit = 1.0,
    int n_replicates = 10
) {

  CharacterVector names = CharacterVector::create(
    "overlap_sp",
    "overlap_vd",
    "overlap_norm",
    "overlap_expquad",
    "overlap_quad",

    "sp_norm_5050",
    "sp_norm_7525",
    "sp_expquad_5050",
    "sp_expquad_7525",
    "sp_quad_5050",
    "sp_quad_7525"
  );

  NumericMatrix similarity(n_replicates, names.length());

  for(int i = 0; i < n_replicates; i++) {

    // simulate_fire
    List fire_sim = simulate_fire_compare_veg_internal(
      landscape,
      burnable,
      ignition_cells,
      coef,
      vegetation,
      n_veg_types,
      upper_limit
    );

    similarity(i, _) = compare_fires_try(fire_ref, fire_sim);
  }

  colnames(similarity) = names;
  return similarity;
}

